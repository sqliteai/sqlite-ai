name: Release

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

jobs:
  release:
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-22.04
    name: release
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/download-artifact@v4.2.1
        with:
          path: artifacts
          run-id: ${{ github.event.workflow_run.id }}

      - name: release tag version from sqlite-ai.h
        id: tag
        run: |
          VERSION=$(make version)
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            LATEST=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.name')
            if [[ "$VERSION" != "$LATEST" || "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
              echo "version=$VERSION" >> $GITHUB_OUTPUT
            else
              echo "::warning file=src/sqlite-ai.h::To release a new version, please update the SQLITE_AI_VERSION in src/sqlite-ai.h to be different than the latest $LATEST"
            fi
            exit 0
          fi
          echo "‚ùå SQLITE_AI_VERSION not found in sqlite-ai.h"
          exit 1

      - name: zip artifacts
        run: |
          for folder in "artifacts"/*; do
            if [ -d "$folder" ]; then
              name=$(basename "$folder")
              if [[ "$name" != "ai-apple-xcframework" ]]; then
                tar -czf "${name}-${{ steps.tag.outputs.version }}.tar.gz" -C "$folder" .
              fi
              (cd "$folder" && zip -rq "../../${name}-${{ steps.tag.outputs.version }}.zip" .)
            fi
          done

      - uses: softprops/action-gh-release@v2.2.1
        if: steps.tag.outputs.version != ''
        with:
          generate_release_notes: true
          tag_name: ${{ steps.tag.outputs.version }}
          files: |
            ai-*-${{ steps.tag.outputs.version }}.zip
            ai-*-${{ steps.tag.outputs.version }}.tar.gz
          make_latest: true
